"use client"

import React from "react";
import Chart from "react-apexcharts";
import dynamic from "next/dynamic";
// const Chart = dynamic(() => import("react-apexcharts"), { ssr: false });

const data = {
    series: [
        {
            data: [
                {
                    x: new Date("2024-02-12").getTime(),
                    y: [48296.3952, 82007.47, 74576.52, 16020.52]
                },
                {
                    x: new Date("2024-02-05").getTime(),
                    y: [42577.6248, 53594.42, 26482.48, 29392.48]
                },
                {
                    x: new Date("2024-01-29").getTime(),
                    y: [42030.9143, 83895.41, 81833.42, 58358.42]
                },
                {
                    x: new Date("2024-01-22").getTime(),
                    y: [41553.6542, 79718.38, 52189.42, 3559.42]
                },
                {
                    x: new Date("2024-01-15").getTime(),
                    y: [41715.0743, 56627.40, 29746.41, 54579.41]
                },
                {
                    x: new Date("2024-01-08").getTime(),
                    y: [43948.7148, 96937.41, 72461.41, 79627.41]
                },
                {
                    x: new Date("2024-01-01").getTime(),
                    y: [42280.2345, 89971.40, 81354.43, 94310.43]
                },
                {
                    x: new Date("2023-12-25").getTime(),
                    y: [43010.5743, 80478.41, 42406.42, 26519.42]
                },
                {
                    x: new Date("2023-12-18").getTime(),
                    y: [41348.2044, 36796.40, 53026.43, 1612.43]
                },
                {
                    x: new Date("2023-12-11").getTime(),
                    y: [43792.0243, 80838.40, 23458.41, 36466.41]
                },
                {
                    x: new Date("2023-12-04").getTime(),
                    y: [39978.6344, 70552.39, 97863.43, 77970.43]
                },
                {
                    x: new Date("2023-11-27").getTime(),
                    y: [37454.1940, 13561.36, 75013.39, 97839.39]
                },
                {
                    x: new Date("2023-11-20").getTime(),
                    y: [37374.0738, 41534.35, 67097.37, 47912.37]
                },
                {
                    x: new Date("2023-11-13").getTime(),
                    y: [37070.3037, 96489.34, 94850.37, 38655.37]
                },
                {
                    x: new Date("2023-11-06").getTime(),
                    y: [35044.7937, 92626.34, 54582.37, 5452.37]
                },
                {
                    x: new Date("2023-10-30").getTime(),
                    y: [34531.7435, 91984.34, 8331.35, 4936.35]
                },
                {
                    x: new Date("2023-10-23").getTime(),
                    y: [30140.6935, 15043.30, 9783.34, 5384.834]
                },
                {
                    x: new Date("2023-10-16").getTime(),
                    y: [27162.6330, 28748.27, 13047.29, 9939.029]
                },
                {
                    x: new Date("2023-10-09").getTime(),
                    y: [27934.4727, 98947.26, 55832.27, 15965.27]
                },
                {
                    x: new Date("2023-10-02").getTime(),
                    y: [27976.8028, 49446.27, 21555.27, 93509.27]
                },
                {
                    x: new Date("2023-09-25").getTime(),
                    y: [26253.7828, 4724.26, 1147.27, 98375.27]
                },
                {
                    x: new Date("2023-09-18").getTime(),
                    y: [26532.9927, 48876.26, 22105.26, 25683.26]
                },
                {
                    x: new Date("2023-09-11").getTime(),
                    y: [25831.7126, 84050.24, 93030.26, 53419.26]
                },
                {
                    x: new Date("2023-09-04").getTime(),
                    y: [25968.1726, 41401.25, 40436.25, 83223.25]
                },
                {
                    x: new Date("2023-08-28").getTime(),
                    y: [26089.6228, 28934.25, 36261.25, 96957.25]
                },
                {
                    x: new Date("2023-08-21").getTime(),
                    y: [26188.6926, 78690.25, 52073.26, 8969.26]
                },
                {
                    x: new Date("2023-08-14").getTime(),
                    y: [29283.2629, 66025.25, 40911.26, 18958.26]
                },
                {
                    x: new Date("2023-08-07").getTime(),
                    y: [29038.5130, 17680.28, 72414.29, 28291.29]
                },
                {
                    x: new Date("2023-07-31").getTime(),
                    y: [29278.3129, 98800.28, 65702.29, 4186.29]
                },
                {
                    x: new Date("2023-07-24").getTime(),
                    y: [30081.6630, 90339.28, 93429.29, 27531.29]
                },
                {
                    x: new Date("2023-07-17").getTime(),
                    y: [30249.6330, 33640.29, 55643.30, 8454.30]
                },
                {
                    x: new Date("2023-07-10").getTime(),
                    y: [30172.4231, 81452.29, 96639.30, 24913.30]
                },
                {
                    x: new Date("2023-07-03").getTime(),
                    y: [30624.5231, 46005.29, 77729.30, 17123.30]
                },
                {
                    x: new Date("2023-06-26").getTime(),
                    y: [30480.52, 31256.86, 29600.28, 30620.77]
                },
                {
                    x: new Date("2023-06-19").getTime(),
                    y: [26335.44, 31389.54, 26312.83, 30480.26]
                },
                {
                    x: new Date("2023-06-12").getTime(),
                    y: [25934.29, 26769.39, 24797.17, 26336.21]
                },
                {
                    x: new Date("2023-06-05").getTime(),
                    y: [27123.11, 27332.18, 25434.87, 25940.17]
                },
                {
                    x: new Date("2023-05-29").getTime(),
                    y: [28075.59, 28432.04, 26574.64, 27119.07]
                },
                {
                    x: new Date("2023-05-22").getTime(),
                    y: [26749.89, 28193.45, 25890.59, 28085.65]
                },
                {
                    x: new Date("2023-05-15").getTime(),
                    y: [26931.38, 27646.35, 26415.10, 26753.83]
                },
                {
                    x: new Date("2023-05-08").getTime(),
                    y: [28450.46, 28663.27, 25878.43, 26930.64]
                },
                {
                    x: new Date("2023-05-01").getTime(),
                    y: [29227.10, 29820.13, 27680.79, 28454.98]
                },
                {
                    x: new Date("2023-04-24").getTime(),
                    y: [27591.73, 29995.84, 27070.85, 29268.81]
                },
                {
                    x: new Date("2023-04-17").getTime(),
                    y: [30317.15, 30470.30, 27169.57, 27591.38]
                },
                {
                    x: new Date("2023-04-10").getTime(),
                    y: [28336.03, 31005.61, 28189.27, 30315.36]
                },
                {
                    x: new Date("2023-04-03").getTime(),
                    y: [28183.08, 28739.24, 27276.72, 28330.50]
                },
                {
                    x: new Date("2023-03-27").getTime(),
                    y: [27994.07, 29159.90, 26606.69, 27993.10]
                },
                {
                    x: new Date("2023-03-20").getTime(),
                    y: [28041.60, 28803.34, 26760.00, 28041.60]
                },
                {
                    x: new Date("2023-03-13").getTime(),
                    y: [22156.41, 28440.56, 21918.20, 22156.41]
                },
                {
                    x: new Date("2023-03-06").getTime(),
                    y: [22436.82, 22584.29, 19628.25, 22436.82]
                },
                {
                    x: new Date("2023-02-27").getTime(),
                    y: [23561.45, 23880.63, 21989.82, 23435.51]
                },
                {
                    x: new Date("2023-02-20").getTime(),
                    y: [24336.62, 25126.85, 22861.56, 24336.62]
                },
                {
                    x: new Date("2023-02-13").getTime(),
                    y: [24307.35, 24313.41, 23460.76, 24327.64]
                }
            ],
        },
    ],
    options: {
        chart: {
            type: "candlestick",
            height: 350,
        },
        title: {
            text: "Bitcoin",
            align: "left",
        },
        xaxis: {
            type: "datetime",
        },
        yaxis: {
            tooltip: {
                enabled: true,
            },
        },
    },
};
function Bitcoin() {
    return (
        <div id="chartContainer" className="border-2 border-accent rounded p-4">
            <Chart
                type="candlestick"
                height={400}
                // @ts-ignore
                options={data.options}
                series={data.series}
            />
        </div>
    );
}

export default Bitcoin;
