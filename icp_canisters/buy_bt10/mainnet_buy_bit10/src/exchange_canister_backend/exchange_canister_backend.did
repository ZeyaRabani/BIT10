type Token = record {
  token_id : opt text;
  token_name : text;
  token_symbol : text;
  token_address : opt text;
  token_chain : text;
  token_decimals : nat8;
  is_native : bool;
  is_active : bool;
  price_feed_id : opt text;
  price_feed_link : opt text;
};

type TokenAllocation = record {
  chain : text;
  token_address : text;
  total_chain_supply : text;
  total_tokens_bought : text;
  total_tokens_sold : text;
};

type TokenDetails = record {
  name : text;
  symbol : text;
  total_supply : text;
  allocations : vec TokenAllocation;
};

type BIT10TokenResponse = record {
  tokens : vec record { text; TokenDetails };
};

type BaseNetwork = variant {
  Mainnet;
  Sepolia;
};

type BscNetwork = variant {
  Mainnet;
  Testnet;
};

type SolanaNetwork = variant {
  Mainnet;
  Devnet;
};

type EcdsaKeyName = variant {
  TestKeyLocalDevelopment;
  TestKey1;
  ProductionKey1;
};

type Ed25519KeyName = variant {
  LocalDevelopment;
  MainnetTestKey1;
  MainnetProdKey1;
};

type InitArg = record {
  base_network : opt BaseNetwork;
  bsc_network : opt BscNetwork;
  solana_network : opt SolanaNetwork;
  ecdsa_key_name : opt EcdsaKeyName;
  ed25519_key_name : opt Ed25519KeyName;
};

type ICPBuyArgs = record {
  token_in_address : text;
  token_out_address : text;
  token_out_amount : text;
};

type SwapResponseData = record {
  swap_id : text;
  user_wallet_address : text;
  token_in_address : text;
  token_in_amount : text;
  token_in_usd_amount : text;
  token_in_tx_hash : text;
  token_out_address : text;
  token_out_amount : text;
  token_out_tx_hash : text;
  transaction_type : text;
  transaction_timestamp : text;
  network : text;
};

type SwapResponse = variant {
  Ok : SwapResponseData;
  Err : text;
};

type ICPSellArgs = record {
  token_in_address : text;
  token_in_amount : text;
  token_out_address : text;
};

type SwapArgs = record {
  user_wallet_address : text;
  token_in_address : text;
  token_in_amount : text;
  token_out_address : text;
  token_out_amount : text;
};

type TransactionResponse = record {
  from : text;
  to : text;
  value : text;
  data : text;
};

service : (opt InitArg) -> {
  base_address : () -> (text);
  bsc_address : () -> (text);
  solana_address : () -> (text);
  
  nonce_account : () -> (text);
  
  bit10_token : () -> (BIT10TokenResponse) query;
  
  get_buy_history : () -> (vec SwapResponseData) query;
  get_sell_history : () -> (vec SwapResponseData) query;

  icp_buy : (ICPBuyArgs) -> (SwapResponse);
  icp_sell : (ICPSellArgs) -> (SwapResponse);
  
  base_create_transaction : (SwapArgs) -> (TransactionResponse);
  base_buy : (text) -> (SwapResponse);

  bsc_create_transaction : (SwapArgs) -> (TransactionResponse);
  bsc_buy : (text) -> (SwapResponse);
  
  create_associated_token_account : (text) -> (variant { Ok : text; Err : text });
  associated_token_account : (text) -> (variant { Ok : text; Err : text });
  create_nonce_account : () -> (variant { Ok : text; Err : text });
  solana_create_transaction : (SwapArgs) -> (TransactionResponse);
  solana_buy : (text) -> (SwapResponse);
};